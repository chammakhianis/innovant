{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/thomas-shelbi/Downloads/next-website-v1-main/pages/register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useForm } from 'react-hook-form';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport styled from 'styled-components';\nimport { useState } from \"react\";\nconst Hero = styled.div`\n  height: 90vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #fff;\n`;\nexport default function Home() {\n  const {\n    register,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const router = useRouter();\n  const {\n    0: firstName,\n    1: setFirstName\n  } = useState(\"\");\n  const {\n    0: lastName,\n    1: setLastName\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      let res = await fetch('https://localhost:3000/register', {\n        method: \"POST\",\n        body: JSON.stringify({\n          firstName: firstName,\n          lastName: lastName,\n          email: email,\n          password: password\n        })\n      });\n      let resJson = await res.json();\n\n      if (res.status === 200) {\n        setName(\"\");\n        setEmail(\"\");\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/logo.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n              id: \"firstName\",\n              \"aria-invalid\": errors.lirstName ? \"true\" : \"false\"\n            }, register('firstName', {\n              required: true,\n              maxLength: 20\n            })), {}, {\n              placeholder: \"FirstName*\",\n              onChange: e => setFirstName(e.target.value)\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 9\n            }, this), errors.firstName && errors.firstName.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"alert\",\n              children: \"This is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 9\n            }, this), errors.firstName && errors.firstName.type === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"alert\",\n              children: \"Max length exceeded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n              id: \"lastName\",\n              \"aria-invalid\": errors.lirstName ? \"true\" : \"false\"\n            }, register('lastName', {\n              required: true,\n              maxLength: 20\n            })), {}, {\n              placeholder: \"LastName*\",\n              onChange: e => setLastName(e.target.value)\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 11\n            }, this), errors.lastName && errors.lastName.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"alert\",\n              children: \"This is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 9\n            }, this), errors.lastName && errors.lastName.type === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"alert\",\n              children: \"Max length exceeded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n              id: \"email\",\n              \"aria-invalid\": errors.Email ? \"true\" : \"false\"\n            }, register(\"email\", {\n              required: \"required\",\n              pattern: {\n                value: /\\S+@\\S+\\.\\S+/,\n                message: \"Entered value does not match email format\"\n              }\n            })), {}, {\n              placeholder: \"Email*\",\n              onChange: e => setEmail(e.target.value)\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 11\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"alert\",\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n              id: \"password\"\n            }, register(\"password\", {\n              required: \"required\",\n              minLength: {\n                value: 5,\n                message: \"min length is 5\"\n              }\n            })), {}, {\n              type: \"password\",\n              placeholder: \"Password*\",\n              onChange: e => setPassword(e.target.value)\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 11\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"alert\",\n              children: errors.password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n              id: \"rpassword\"\n            }, register(\"rpassword\", {\n              required: \"required\",\n              minLength: {\n                value: 5,\n                message: \"min length is 5\"\n              }\n            })), {}, {\n              type: \"password\",\n              placeholder: \"Reapter password*\"\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 11\n            }, this), errors.rpassword && /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"alert\",\n              children: errors.rpassword.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: message ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 47\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/thomas-shelbi/Downloads/next-website-v1-main/pages/register.js"],"names":["useForm","useRouter","Head","styled","useState","Hero","div","Home","register","formState","errors","router","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","res","fetch","method","body","JSON","stringify","resJson","json","status","setName","setMessage","err","console","log","lirstName","required","maxLength","target","value","type","Email","pattern","message","minLength","rpassword"],"mappings":"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","sourcesContent":["\n\nimport { useForm } from 'react-hook-form';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport styled from 'styled-components';\nimport { useState } from \"react\";\n\nconst Hero = styled.div`\n  height: 90vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #fff;\n`;\n\n\nexport default function Home() {\n  \n  const { register, formState: { errors }} = useForm();\n  const router = useRouter();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  \n  async function handleSubmit(e) {\n    e.preventDefault();\n    try {\n      let res = await fetch('https://localhost:3000/register', {\n        method: \"POST\",\n        body: JSON.stringify({\n          firstName: firstName,\n          lastName: lastName,\n          email: email,\n          password: password,\n        }),\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        setName(\"\");\n        setEmail(\"\");\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  \n  \n\n  return (\n    <>\n    <Head>\n      <title>Home</title>\n      <link rel='icon' href='/logo.png' />\n    </Head>\n    <Hero>\n      \n   \n   \n      <div >\n        <form\n          onSubmit={handleSubmit()}\n          >\n        <div className='name'>\n        <input\n          id=\"firstName\"\n        aria-invalid={errors.lirstName ? \"true\" : \"false\"}\n        {...register('firstName', { required: true, maxLength: 20 })} \n        placeholder='FirstName*'\n        onChange={(e) => setFirstName(e.target.value)}\n      />\n      {errors.firstName && errors.firstName.type === \"required\" && (\n        <span role=\"alert\">This is required</span>\n      )}\n      {errors.firstName && errors.firstName.type === \"maxLength\" && (\n        <span role=\"alert\">Max length exceeded</span>\n      )}\n        \n          <input\n          id=\"lastName\"\n        aria-invalid={errors.lirstName ? \"true\" : \"false\"}\n        {...register('lastName', { required: true, maxLength: 20 })} \n        placeholder='LastName*'\n        onChange={(e) => setLastName(e.target.value)}\n      />\n      {errors.lastName && errors.lastName.type === \"required\" && (\n        <span role=\"alert\">This is required</span>\n      )}\n      {errors.lastName && errors.lastName.type === \"maxLength\" && (\n        <span role=\"alert\">Max length exceeded</span>\n      )}\n        </div>\n        <div>\n          <input\n            id=\"email\"\n            aria-invalid={errors.Email ? \"true\" : \"false\"}\n            {...register(\"email\", {\n              required: \"required\",\n              pattern: {\n                value: /\\S+@\\S+\\.\\S+/,\n                message: \"Entered value does not match email format\"\n              }\n            })} placeholder='Email*'\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          {errors.email && <span role=\"alert\">{errors.email.message}</span>}\n        </div>\n        <div>\n          <input\n            id=\"password\"\n            {...register(\"password\", {\n              required: \"required\",\n              minLength: {\n                value: 5,\n                message: \"min length is 5\"\n              }\n            })}\n            type=\"password\"  \n            placeholder='Password*'\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {errors.password && <span role=\"alert\">{errors.password.message}</span>}\n          </div>\n          <div>\n          <input\n            id=\"rpassword\"\n            {...register(\"rpassword\", {\n              required: \"required\",\n              minLength: {\n                value: 5,\n                message: \"min length is 5\"\n              }\n            })}\n            type=\"password\" placeholder='Reapter password*'\n          />\n          {errors.rpassword && <span role=\"alert\">{errors.rpassword.message}</span>}\n          </div>\n          <div>\n            <button\n              type=\"submit\">\n              Submit\n            </button>\n          </div>\n          <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n        </form>\n      </div>\n  \n    </Hero>\n  </>\n  );\n}"]},"metadata":{},"sourceType":"module"}